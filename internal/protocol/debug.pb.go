// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/protocol/debug.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerType int32

const (
	ServerType_PROD ServerType = 0
	ServerType_DEV  ServerType = 1
)

var ServerType_name = map[int32]string{
	0: "PROD",
	1: "DEV",
}

var ServerType_value = map[string]int32{
	"PROD": 0,
	"DEV":  1,
}

func (x ServerType) String() string {
	return proto.EnumName(ServerType_name, int32(x))
}

func (ServerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7d558baaf08f173c, []int{0}
}

type ServerInfo struct {
	// Whether this is a production or development server.
	Type ServerType `protobuf:"varint,1,opt,name=type,proto3,enum=protocol.ServerType" json:"type,omitempty"`
	// Identity of server.
	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Port the server is running on.
	Port uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// Established connections.
	Connections          int32    `protobuf:"varint,4,opt,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d558baaf08f173c, []int{0}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetType() ServerType {
	if m != nil {
		return m.Type
	}
	return ServerType_PROD
}

func (m *ServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ServerInfo) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ServerInfo) GetConnections() int32 {
	if m != nil {
		return m.Connections
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.ServerType", ServerType_name, ServerType_value)
	proto.RegisterType((*ServerInfo)(nil), "protocol.ServerInfo")
}

func init() {
	proto.RegisterFile("internal/protocol/debug.proto", fileDescriptor_7d558baaf08f173c)
}

var fileDescriptor_7d558baaf08f173c = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xd7, 0xae, 0xd3, 0xf1, 0x86, 0x63, 0x3c, 0x44, 0x4a, 0x55, 0x2c, 0x3b, 0x15, 0x0f,
	0x09, 0xcc, 0xb3, 0x17, 0xe9, 0x04, 0x4f, 0x6a, 0x15, 0x0f, 0xde, 0x6c, 0xfb, 0x5a, 0x02, 0x35,
	0x09, 0x31, 0x15, 0x0a, 0xfe, 0xf1, 0xd2, 0x84, 0xc2, 0x60, 0xb7, 0x2f, 0x1f, 0x3f, 0xbe, 0xe4,
	0x17, 0xb8, 0x16, 0xd2, 0x92, 0x91, 0x5f, 0x1d, 0xd7, 0x46, 0x59, 0x55, 0xa9, 0x8e, 0xd7, 0x54,
	0xf6, 0x2d, 0x73, 0x47, 0x5c, 0x4e, 0x6d, 0x72, 0xd9, 0x2a, 0xd5, 0x76, 0xe4, 0xb1, 0xb2, 0x6f,
	0x38, 0x7d, 0x6b, 0x3b, 0x78, 0x6c, 0xfb, 0x07, 0xf0, 0x46, 0xe6, 0x97, 0xcc, 0x93, 0x6c, 0x14,
	0x66, 0x10, 0xd9, 0x41, 0x53, 0x1c, 0xa4, 0x41, 0xb6, 0xde, 0x9d, 0xb3, 0x69, 0x83, 0x79, 0xe6,
	0x7d, 0xd0, 0x54, 0x38, 0x02, 0xd7, 0x10, 0x8a, 0x3a, 0x0e, 0xd3, 0x20, 0x5b, 0x14, 0xa1, 0xa8,
	0x11, 0x21, 0xd2, 0xca, 0xd8, 0x78, 0x9e, 0x06, 0xd9, 0x59, 0xe1, 0x32, 0xa6, 0xb0, 0xaa, 0x94,
	0x94, 0x54, 0x59, 0xa1, 0xe4, 0x4f, 0x1c, 0x39, 0xf8, 0xb0, 0xba, 0xbd, 0x99, 0x6e, 0x1f, 0x97,
	0x71, 0x09, 0xd1, 0x4b, 0xf1, 0x9c, 0x6f, 0x66, 0x78, 0x0a, 0xf3, 0x7c, 0xff, 0xb1, 0x09, 0x76,
	0x8f, 0xb0, 0xc8, 0x47, 0x29, 0xbc, 0x87, 0xd5, 0x6b, 0x4f, 0x66, 0xf0, 0x38, 0x5e, 0x30, 0x2f,
	0xc5, 0x26, 0x29, 0xb6, 0x1f, 0xa5, 0x92, 0xa3, 0x27, 0x8f, 0x5a, 0xdb, 0xd9, 0xc3, 0xd5, 0x67,
	0xc2, 0x78, 0x43, 0xd2, 0x08, 0xc3, 0x8f, 0xfe, 0xad, 0x3c, 0x71, 0xe9, 0xee, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0xc1, 0x9b, 0x53, 0x06, 0x53, 0x01, 0x00, 0x00,
}
